name: Release Images

on:
  push:
    tags:
      - 'v*'
      - 'release-*'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          REF=${GITHUB_REF_NAME}
          SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "ref_name=${REF}" >> $GITHUB_OUTPUT
          echo "sha7=${SHA}" >> $GITHUB_OUTPUT

      - name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/bermuda-buddy-api:latest
            ghcr.io/${{ github.repository_owner }}/bermuda-buddy-api:${{ steps.meta.outputs.ref_name }}
            ghcr.io/${{ github.repository_owner }}/bermuda-buddy-api:${{ steps.meta.outputs.sha7 }}

      - name: Build and push Web image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/web/Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            NEXT_PUBLIC_API_BASE=http://api:8000
          tags: |
            ghcr.io/${{ github.repository_owner }}/bermuda-buddy-web:latest
            ghcr.io/${{ github.repository_owner }}/bermuda-buddy-web:${{ steps.meta.outputs.ref_name }}
            ghcr.io/${{ github.repository_owner }}/bermuda-buddy-web:${{ steps.meta.outputs.sha7 }}

  smoke:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      NWS_USER_AGENT: "BermudaBuddy/Release (ci@local)"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Smoke - compose up
        run: |
          docker compose -f infra/docker-compose.prod.yml up -d --build
          echo "Waiting for API to become healthy..."
          for i in {1..30}; do
            if curl -fsS http://localhost:8000/healthz >/dev/null; then echo OK; break; fi; sleep 2; done
          echo "Healthz:" && curl -fsS http://localhost:8000/healthz && echo

      - name: Smoke - compose down
        if: always()
        run: docker compose -f infra/docker-compose.prod.yml down -v
